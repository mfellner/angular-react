/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var angular = __webpack_require__(1);
	var React   = __webpack_require__(2);
	var Clicker = __webpack_require__(4);

	var app = angular.module('angularReact', []);

	app.controller('AppController', function ($scope) {
	  // We need to put 'Clicker' into the controller's scope.
	  $scope.Clicker = Clicker;
	});

	// Include the directive.
	__webpack_require__(3);

	module.exports = app;


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = angular;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var angular = __webpack_require__(1);

	var ngReact = angular.module('angularReact').directive('ngReact', function () {
	  return {
	    controller: 'AppController',
	    template: '<div id="ng-react"></div>',
	    replace: true,
	    scope: {
	      component: '='
	    },
	    link: function (scope, element, attrs) {
	      // React renders the given component with the directive's attrs as properties.
	      React.render(
	        React.createElement(scope.component, attrs),
	        element[0]
	      );
	    }
	  };
	});

	module.exports = ngReact;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	const React = __webpack_require__(2);

	var ____Class0=React.Component;for(var ____Class0____Key in ____Class0){if(____Class0.hasOwnProperty(____Class0____Key)){Clicker[____Class0____Key]=____Class0[____Class0____Key];}}var ____SuperProtoOf____Class0=____Class0===null?null:____Class0.prototype;Clicker.prototype=Object.create(____SuperProtoOf____Class0);Clicker.prototype.constructor=Clicker;Clicker.__superConstructor__=____Class0;

	  function Clicker(props) {"use strict";
	    ____Class0.call(this,props);
	    this.state = {count: this.getMin()};
	    this.onClick = this.onClick.bind(this);
	    this.onReset = this.onReset.bind(this);
	  }

	  // Angular directive's attrs are strings, so we need to parse them.
	  Object.defineProperty(Clicker.prototype,"getMin",{writable:true,configurable:true,value:function() {"use strict";
	    return parseInt(this.props.min);
	  }});

	  Object.defineProperty(Clicker.prototype,"getMax",{writable:true,configurable:true,value:function() {"use strict";
	    return parseInt(this.props.max);
	  }});

	  Object.defineProperty(Clicker.prototype,"onClick",{writable:true,configurable:true,value:function() {"use strict";
	    let count;

	    if (this.state.count < this.getMax()) {
	      count = this.state.count + 1;
	    } else {
	      count = this.getMin();
	    }
	    this.setState({count: count});
	  }});

	  Object.defineProperty(Clicker.prototype,"onReset",{writable:true,configurable:true,value:function() {"use strict";
	    this.setState({count: this.getMin()});
	  }});

	  Object.defineProperty(Clicker.prototype,"render",{writable:true,configurable:true,value:function() {"use strict";
	    return (
	      /* jshint ignore:start */
	      React.createElement("div", null, 
	        React.createElement("button", {className: "btn btn-default", onClick: this.onClick}, 
	          "click ", React.createElement("span", {className: "badge"}, this.state.count)
	        ), 
	        React.createElement("button", {className: "btn btn-flat btn-danger", onClick: this.onReset}, 
	          "reset"
	        )
	      )
	      /* jshint ignore:end */
	    );
	  }});


	// The default props will be overridden by the directive's attrs.
	Clicker.defaultProps = {
	  min: 0,
	  max: Number.MAX_SAFE_INTEGER
	};

	module.exports = Clicker;


/***/ }
/******/ ]);